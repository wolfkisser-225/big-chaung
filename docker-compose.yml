version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: ctf-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-ctf_root_2024}
      MYSQL_DATABASE: ${DB_NAME:-ctf_platform}
      MYSQL_USER: ${DB_USER:-ctf_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-ctf_pass_2024}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - ctf-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: ctf-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ctf-network
    command: redis-server --appendonly yes

  # 后端 API 服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ctf-backend
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-ctf_platform}
      - DB_USER=${DB_USER:-ctf_user}
      - DB_PASSWORD=${DB_PASSWORD:-ctf_pass_2024}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    networks:
      - ctf-network
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ctf-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - ctf-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro

  # 数据库管理工具 (可选)
  adminer:
    image: adminer:latest
    container_name: ctf-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - mysql
    networks:
      - ctf-network
    environment:
      ADMINER_DEFAULT_SERVER: mysql

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ctf-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16